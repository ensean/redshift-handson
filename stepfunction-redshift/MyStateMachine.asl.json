{
  "Comment": "A Hello World example of the Amazon States Language using Pass states",
  "StartAt": "setup_env",
  "States": {
    "setup_env": {
      "Type": "Pass",
      "Next": "create_table",
      "Result": {
        "input": {
          "redshift_cluster_id": "redshiftcluster-kc0irhbe2ww6",
          "redshift_database": "dev",
          "redshift_user": "awsuser",
          "redshift_schema": "public",
          "action": "create_table",
          "sql_statement": [
            "drop table if exists customer;",
            "create table customer (",
            "c_custkey int8 not null ,",
            "c_name varchar(25) not null,",
            "c_address varchar(40) not null,",
            "c_nationkey int4 not null,",
            "c_phone char(15) not null,",
            "c_acctbal numeric(12,2) not null,",
            "c_mktsegment char(10) not null,",
            "c_comment varchar(117) not null,",
            "Primary Key(C_CUSTKEY)",
            ") distkey(c_custkey) sortkey(c_custkey);"
          ]
        }
      }
    },
    "create_table": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:ap-northeast-1:1234567890123:function:StepFunctionsSample-RedshiftETLec8-RedshiftDataApi-ljm1F0Aetq5V:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Pass"
    },
    "Pass": {
      "Type": "Pass",
      "Next": "copy_data",
      "Result": {
        "input": {
          "redshift_cluster_id": "redshiftcluster-kc0irhbe2ww6",
          "redshift_database": "dev",
          "redshift_user": "awsuser",
          "redshift_schema": "public",
          "action": "create_table",
          "sql_statement": [
            "copy customer from 's3://redshift-downloads/TPC-H/2.18/10GB/customer.tbl' iam_role default delimiter '|' region 'us-east-1';"
          ]
        }
      }
    },
    "copy_data": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:ap-northeast-1:1234567890123:function:StepFunctionsSample-RedshiftETLec8-RedshiftDataApi-ljm1F0Aetq5V:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "check_status",
      "OutputPath": "$.Payload"
    },
    "check_status": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:ap-northeast-1:1234567890123:function:StepFunctionsSample-RedshiftETLec8-RedshiftDataApi-ljm1F0Aetq5V:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Choice",
      "ResultPath": "$.status"
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "FAILED",
          "Next": "Fail"
        },
        {
          "Variable": "$.status",
          "StringEquals": "FINISHED",
          "Next": "Success"
        }
      ],
      "Default": "Wait"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 15,
      "Next": "check_status"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}